<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd">
<!--

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
This is a generated file.  DO NOT EDIT!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

-->
<cxchelptopics><ENTRY pkg="sherpa" key="set_sampler_opt" refkeywords="set set_sampler  jumping rule MCMC MH Metropolis Metropolis-Hastings get_sampler_opt  Markov chain Monte Carlo pyBLoCXS  minimization minimize optimization optimize method    annealing likelihood converge convergence " seealsogroups="sh.method sh.set " displayseealsogroups="" context="statistics">


    <SYNOPSIS>
      Define sampler options for a pyBLoCXS chain.
    </SYNOPSIS>

    <SYNTAX>
      <LINE>set_sampler_opt(optname, val )</LINE>
      
    </SYNTAX>

    <DESC>

    <PARA>
      pyBLoCXS is a sophisticated Markov chain Monte Carlo (MCMC) based algorithm designed to carry out Bayesian Low-Count X-ray Spectral (BLoCXS) analysis in the Sherpa environment.  The algorithm explores parameter space at a suspected minimum using a predefined Sherpa model to high-energy X-ray spectral data.  
     </PARA>

      <PARA>
	The Sherpa set_sampler_opt  command may be used to define
	a particular sampler option for a pyBLoCXS chain; the sampler
	itself may be set with set_sampler
	(<HREF link="http://cxc.harvard.edu/sherpa/ahelp/list_samplers.html">"ahelp
	set_sampler"</HREF>). 
      </PARA>

      <LIST>
        <ITEM>
          optname - sampler option name
        </ITEM>

        <ITEM>
          val - value for the option
        </ITEM>
      </LIST>

       <PARA>
        Available samplers and their associated configuration options
        are returned by the list_samplers and get_sampler
        commands, respectively.        
        (<HREF link="http://cxc.harvard.edu/sherpa/ahelp/list_samplers.html">"ahelp
        list_samplers"</HREF>
        and <HREF link="http://cxc.harvard.edu/sherpa/ahelp/get_sampler.html">"ahelp
        get_sampler"</HREF>).
      </PARA>

      <PARA>
	Refer to
	the <HREF link="http://hea-www.harvard.edu/AstroStat/pyBLoCXS/#high-level-user-interface-functions">pyBLoCXS
	documentation</HREF> for additional information about the algorithm.
      </PARA>	
    </DESC>

    <QEXAMPLELIST>
      <QEXAMPLE>
        <SYNTAX>
	  <LINE>sherpa&gt; set_sampler("MH")</LINE>
	  <LINE>sherpa&gt; set_sampler_opt("scale", 0.5)</LINE>
	</SYNTAX>
	<DESC>
          <PARA>
	    Set the current sampler to Metropolis-Hastings, and its
	    "scale" configuration option to a value of 0.5 ("scale"
	    refers to the  scalar multiple of the output of covar() used in the scale of the t-distribution.).
	  </PARA>
<VERBATIM>
sherpa&gt; load_pha("pha.fits")
sherpa&gt; set_model(xsphabs.abs1*powlaw1d.p1)
sherpa&gt; set_stat("cash")
sherpa&gt; fit()
sherpa&gt; covar()

sherpa&gt; set_sampler("MH")
sherpa&gt; set_sampler_opt("scale", 0.5)
</VERBATIM>
        </DESC>
      </QEXAMPLE>
     <QEXAMPLE>
        <SYNTAX>
	  <LINE>sherpa&gt; set_sampler("MetropolisMH")</LINE>
	  <LINE>sherpa&gt; set_sampler_opt("p_M", 0.33)</LINE>
	</SYNTAX>
	<DESC>
          <PARA>
	    Set the current sampler to Metropolis with Metropolis-Hastings, and its
	    "p_M" configuration option to a value of 0.33 ("p_M"
	    refers to the proportion of jumps generated by the Metropolis jumping rule).
	  </PARA>
        </DESC>
      </QEXAMPLE>
   
    </QEXAMPLELIST>
	<BUGS>
     <PARA>
        See the
        <HREF link="http://cxc.harvard.edu/sherpa/bugs/">bugs pages
        on the Sherpa website</HREF> for an up-to-date listing of known bugs.
     </PARA>
   </BUGS>
    <VERSION>CIAO 4.4</VERSION>
    <LASTMODIFIED>December 2011</LASTMODIFIED>
</ENTRY></cxchelptopics>
