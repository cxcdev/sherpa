<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd">
<!--

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
This is a generated file.  DO NOT EDIT!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

-->
<cxchelptopics><ENTRY pkg="sherpa" key="moncar" refkeywords="minimization minimize optimization optimize method moncar Monte Carlo MonteCarlo likelihood converge convergence" seealsogroups="sh.method " displayseealsogroups="" context="methods">

<SYNOPSIS>
Monte Carlo optimization method
</SYNOPSIS>

<DESC>
  <PARA>
    The Sherpa Monte Carlo optimization method, an implementation of the 
    differential evolution algorithm. 
  </PARA>


  <PARA>
      The "forward-fitting" algorithm employed by the Sherpa software
      package is a standard technique used to model X-ray data. A
      statistic, usually an assumed weighted chi2 or
      Poisson likelihood (e.g. Cash), is minimized in the fitting
      process to obtain a set of the best model
      parameters. Astronomical models often have complex forms with
      many parameters that can be correlated (e.g. an absorbed power-law); minimization is not trivial in such a setting, as the
      statistical parameter space becomes multimodal, and finding the
      global minimum is difficult.  Therefore several 
      optimization algorithms have been developed for Sherpa which target a wide range of 
      minimization problems. One of these is a global search Monte-Carlo method,
      which has been implemented following a differential evolution
      algorithm presented by Storn and Price (1997).
  </PARA>

  <PARA title="Differential Evolution">
    When using the Sherpa 'moncar' method, a population of fixed size -
    which contains n-dimensional vectors,  where n is the number of
    free parameters - 
    is randomly initialized.  At each iteration, a new n-dimensional vector is
    generated by combining vectors from the pool of population, the
    resulting trial vector is selected if it lowers the objective
    function. For more details see: 
  </PARA>

  <PARA>
    Storn, R. and Price, K. "Differential Evolution: A Simple and
    Efficient Adaptive Scheme for Global Optimization over Continuous
    Spaces." J. Global Optimization 11, 341-359, 1997.  
  </PARA>

  <PARA>
    or http://www.icsi.berkeley.edu/~storn/code.html
  </PARA>

  <LIST>
    <CAPTION>Method Options</CAPTION>

  <ITEM>
    ftol - the function tolerance to terminate the search for the
    minimum; default is sqrt( DBL_EPSILON ) ~ 1.19209289551e-07, where
    DBL_EPSILON is the smallest number x such that 1.0 != 1.0 + x.
  </ITEM>

  <ITEM>
    maxfev - the maximum number of function evaluations; default
    is 8192 * n (number of free parameters). 
  </ITEM>

  <ITEM>
    verbose - the amount of information to print about the fit
    progress.  Default is 0 (no output).
  </ITEM>

  <ITEM>
    seed - the seed for the random number generator; default value is
    2357. 
  </ITEM>

  <ITEM>
    population_size - the population of potential solutions is allowed
    to evolve to search for the minimum of the fit statistics. The
    trial solution is randomly chosen from a combination from the
    current population, and it is only accepted if it lowers the
    statistics.  The default value for the population size is 16 times
    the number of free parameters.  
  </ITEM>

  <ITEM>
    xprob - the crossover probability should be within the range
    [0.5,1.0]; default value is 0.9.  A high value for the crossover
    probability should result in a faster convergence rate;
    conversely, a lower value should make the differential evolution
    method more robust. 
  </ITEM>

  <ITEM>
    weighting_factor - the weighting factor should be within the range
    [0.5, 1.0]; default is 0.8. Differential evolution is more
    sensitive to the weighting_factor then the xprob parameter.  A
    lower value for the weighting_factor, coupled with an increase in
    the population_size, gives a more robust search at the cost of
    efficiency. 
  </ITEM>
  </LIST>
</DESC>

    <QEXAMPLELIST>
      <QEXAMPLE>
        <SYNTAX>
          <LINE>sherpa&gt; set_method("moncar")</LINE>
          <LINE>sherpa&gt; get_method_name()</LINE>
          <LINE>'moncar'</LINE>
	</SYNTAX>
        <DESC>
          <PARA>
            Set the optimization method and then confirm the new value.
          </PARA>
        </DESC>
      </QEXAMPLE>
    </QEXAMPLELIST>

<BUGS>
     <PARA>
        See the
        <HREF link="http://cxc.harvard.edu/sherpa/bugs/">bugs pages
        on the Sherpa website</HREF> for an up-to-date listing of known bugs.
     </PARA>
   </BUGS>
<VERSION>CIAO 4.5</VERSION>

<LASTMODIFIED>December 2012</LASTMODIFIED>

</ENTRY></cxchelptopics>
