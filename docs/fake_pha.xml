<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd">
<!--

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
This is a generated file.  DO NOT EDIT!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

-->
<cxchelptopics><ENTRY pkg="sherpa" key="fake_pha" refkeywords="fakeit bfakeit pha pha2 phaII simulate simulated fake Poisson" seealsogroups="sh.pha " displayseealsogroups="" context="data">
	<SYNOPSIS>
     Simulate an observed spectrum based on a theoretical model.
    </SYNOPSIS>

    <SYNTAX>
      <LINE>fake_pha( id, arf, rmf, exposure, [backscal=None, areascal=None, grouping=None, grouped=False, quality=None, bkg=None] )</LINE>
      
    </SYNTAX>

    <DESC>
      <PARA>
	The fake_pha command creates a spectrum (PHA dataset) with
	faked counts given a source model and the instrument response
	files (e.g. ARF and RMF). The generated counts will contain
	Poisson noise.
      </PARA>

      <PARA>
	Background counts may be included in the simulation by
    setting the 'bkg' parameter with background data previously read
    into the Sherpa session from a PHA file. The background counts are
    appropriately scaled, a Poisson draw is taken of the scaled
    background counts, and then that is added to the simulated source
    counts.  (If there are multiple backgrounds, then the average of
    the backgrounds is added to the simulated source counts.) Leaving
    the 'bkg' parameter empty will generate a spectrum containing only
    source counts.
      </PARA>

      <PARA>
	Before fake_pha can be run, a model with the same id as the
	faked dataset must be defined; see 
        
        <HREF link="http://cxc.harvard.edu/sherpa/ahelp/set_source.html">"ahelp set_source"</HREF>
      </PARA>

      <LIST>
	<ITEM>
	  id - id for the faked dataset.  Any existing id will be
	  overwritten, so use different values to compare results from
	  more than one simulation or to compare a simulation to real
	  data. 
	</ITEM>

	<ITEM>
	  arf - accepts an ARF filename or a Sherpa data object that
	  contains the ARF data (see "unpack_arf"). Set to None for no
	  ARF.
	</ITEM>

	<ITEM>
	  rmf - accepts an RMF filename or a Sherpa data object that
	  contains the RMF data (see "unpack_rmf"). This file is required.
	</ITEM>

	<ITEM>
	  exposure - length of observation in seconds. Required input.
	</ITEM>

	<ITEM>
	  backscal - background scaling factor;
          default=None
          
	</ITEM>

	<ITEM>
	  areascal - area scaling factor;
          default=None
          
	</ITEM>

	<ITEM>
	  grouping - integer array of grouping flags;
          default=None
          
	</ITEM>

	<ITEM>
	  grouped - boolean to indicate if data is grouped;
          default=False
          
	</ITEM>

	<ITEM>
	  quality - integer array of quality flags;
          default=None
          
	</ITEM>

	<ITEM>
	  bkg - PHA data for the background;
          default=None (in this case, only source counts are
          simulated)
          
	</ITEM>
      </LIST>

      <PARA>
	If a source data set by
	data set ID is used and contains no grouping flags then
	'grouped' should be negated.
      </PARA>
    </DESC>

    <QEXAMPLELIST>
       <QEXAMPLE>
        <SYNTAX>
          <LINE>sherpa&gt; fake_pha(1, arf="data_arf.fits", rmf="data_rmf.fits", exposure=50000)</LINE>
          <LINE>sherpa&gt; fake_pha(1, "data_arf.fits", "data_rmf.fits", exposure=50000)</LINE>
	</SYNTAX>
	<DESC>
          <PARA>
	    These two commands are equivalent ways of running fake_pha
	    with the ARF and RMF filenames specified.
	  </PARA>

	  <PARA>
	    The ARF and RMF response files associated with dataset 1
	    are loaded directly with fake_pha() and used to simulate a
	    50ks source spectrum, ungrouped by default, and without a
	    background component.  The faked data overwrites the
	    existing dataset with id=1.
	  </PARA>
        </DESC>
      </QEXAMPLE>

      <QEXAMPLE>
        <SYNTAX>
	  <LINE>sherpa&gt; set_source(1,const1d.c1*powlaw1d.p1)</LINE>
	  <LINE>sherpa&gt; fake_pha(1, arf=get_arf(), rmf=get_rmf(), exposure=10000, grouped=True, bkg=get_bkg())</LINE>
	</SYNTAX>
	<DESC>
          <PARA>
	    A model is defined for dataset 1, then fake_pha is run to
 simulate a grouped, 10ks source-plus-background spectrum, using the
 responses and background data associated with PHA data set 1
 (replacing the loaded PHA data in data set 1 with the faked counts). 
 
	  </PARA>
        </DESC>
      </QEXAMPLE>

       <QEXAMPLE>
        <SYNTAX>
	  <LINE>sherpa&gt; arf1=unpack_arf("data_arf.fits")</LINE>
	  <LINE>sherpa&gt; set_arf(1, arf1, 1)</LINE>
	  <LINE>sherpa&gt; rmf1=unpack_rmf("data_rmf.fits")</LINE>
	  <LINE>sherpa&gt; set_rmf(1, rmf1, 1)</LINE>
          <LINE>sherpa&gt; fake_pha(1, arf=arf1, rmf=rmf1, exposure=30000)</LINE>
	</SYNTAX>
	<DESC>
          <PARA>
	    The ARF and RMF response files associated with dataset 1
	    are loaded with the unpack_arf/rmf functions and assigned
	    response data set ID "1" with the set_arf/rmf
	    functions. Data set 1 and its instrument response are then
	    used to simulate a 30ks, ungrouped, source-only
	    spectrum with fake_pha.  The faked data overwrites the
	    existing dataset with id=1.
	  </PARA>
        </DESC>
      </QEXAMPLE>

      <QEXAMPLE>
        <SYNTAX>
          <LINE>sherpa&gt; fake_pha(1, arf=get_arf(), rmf=get_rmf(), exposure=50000)</LINE>
	</SYNTAX>
	<DESC>
          <PARA>
	    Using the ARF and RMF associated with dataset 1 - obtained
	    via the get_arf and get_rmf commands - simulate a 50ks ungrouped
	    source spectrum.  The faked data overwrites the existing dataset
	    with id=1.
	  </PARA>
        </DESC>
      </QEXAMPLE>

      <QEXAMPLE>
        <SYNTAX>
	  <LINE>sherpa&gt; rmf = unpack_rmf("3c273.rmf")</LINE>
	  <LINE>sherpa&gt; set_source(xsphabs.abs1*powlaw1d.p1)</LINE>
	  <LINE>sherpa&gt; fake_pha(1, arf=None, rmf=rmf, exposure=10000,grouped=True)</LINE>
	</SYNTAX>
	<DESC>
          <PARA>
	    A 10ks grouped spectrum is faked with just an RMF (no ARF).
	  </PARA>
        </DESC>
      </QEXAMPLE>
     </QEXAMPLELIST>
 
	<BUGS>
     <PARA>
        See the
        <HREF link="http://cxc.harvard.edu/sherpa/bugs/">bugs pages
        on the Sherpa website</HREF> for an up-to-date listing of known bugs.
     </PARA>
   </BUGS>
    <VERSION>CIAO 4.5</VERSION>
    <LASTMODIFIED>December 2012</LASTMODIFIED>
</ENTRY></cxchelptopics>
